{
    "description": "<p>If you are transitioning to Python, this is the example for you.&nbsp;</p>\r\n<p>Here we define a label at the top of your program, which will become the first string label in your generated RPN, and this is what you will execute on the 42S or Free42 by pressing the XEQ button followed the menu button MAIN.&nbsp; Of course you can call your program anything you like - although only the first 7 characters of any label or function name are used (42S limitation).</p>\r\n<p>We then assign some variables, and call a subroutine called 'report' which displays them.&nbsp; The 'report' subroutine will end up with LBL A in the generated RPN, and will therefore be anonymous - which is usually what you want with helper functions.</p>\r\n<p>If you don't define a LBL then the first function you define with 'def' becomes the first string label of your generated RPN program.&nbsp; The benefit of using LBL at the top of your program is that you can define variables in the outermost 'global' scope of the Python program, which is outside of any function. These variables will then become accessible inside all functions - often very handy. Python looks for variables by looking in the current function, and if not found, looks to the outer function etc. all the way out to the global scope, which is outside any function.</p>\r\n<p>On the other hand, if you define variables <em>inside</em> functions, those variables are private to those functions - the only way to communicate them to other functions is to pass them as parameters to those other functions.</p>",
    "public": "yes",
    "sortnum": 60,
    "source": "LBL(\"main\")\r\n\r\nlength = 10\r\nwidth = 20\r\n\r\nreport()\r\n\r\ndef report():\r\n  print('length is', length, '[LF]width is', width)",
    "tags": "Introductory_Examples",
    "title": "Starting Out"
}